# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.lanzaboote.pkiBundle = lib.mkForce "/var/lib/sbctl";
  boot = {
    initrd = {
      availableKernelModules = [
        "xhci_pci"
        "thunderbolt"
        "vmd"
        "nvme"
        "usb_storage"
        "sd_mod"
        "aesni_intel"
        "cryptd"
      ];
      kernelModules = [ ];
      luks.devices = {
        "cryptroot".device = "/dev/disk/by-uuid/6ff8ba49-4ca2-4e3a-8fcf-e162fae8b2f0";
        "cryptswap".device = "/dev/disk/by-uuid/bb339e19-2a49-455e-9bc2-963a18479fc8";
      };
    };
    kernelModules = [ "kvm-intel" ];
    kernelParams = [
      "i915.force_probe=!9a49"
      "xe.force_probe=9a49"
    ];
    extraModulePackages = [ ];
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/00940d84-3626-4719-a272-680dc615edad";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/2A4D-557D";
      fsType = "vfat";
      options = [
        "fmask=0022"
        "dmask=0022"
      ];
    };
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/cb62901a-0dea-41ce-b237-d4ceec78d7b5"; } ];
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp109s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
